name: Go CI with Coverage

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Check Go Version
        run: go version

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Tests with Coverage
        run: go test ./... -coverprofile=coverage.out

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.out

      - name: Set Coverage Message
        id: set-coverage
        shell: bash
        run: |
          echo "coverage_message<<EOF" >> $GITHUB_OUTPUT
          go tool cover -func=coverage.out >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment Coverage Report on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: '${{ steps.set-coverage.outputs.coverage_message }}'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
